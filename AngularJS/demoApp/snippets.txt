Simple Form Examples 
--------------------
ng-model="yourName"

<h1>Hello {{yourName}}!</h1>

ng-model-options="{ updateOn: 'blur' }"

ng-model-options="{ debounce: 500 }"


Simple Form 2 Examples
----------------------
// Name field
ng-model="name" name="name"

required minlength="10"

ng-style="{'background-color': form2.name.$valid ? '' : 'pink' }"

// Button tag
ng-disabled="!form2.$valid"

<br/>
<code>name = {{name}}</code><br>
<code>form2.name.$valid = {{form2.name.$valid}}</code><br>
<code>form2.name.$error = {{form2.name.$error}}</code><br>
<code>form2.$valid = {{form2.$valid}}</code><br>
<code>form2.$error.required = {{!!form2.$error.required}}</code><br>

Basic Controller Examples
-------------------------
$scope.name = "Paul Mendoza";

{{name}}

// event binding
$scope.sayHello = function() {
		  alert('Hello');		  
	  };

<button ng-click="sayHello()">Click to say hello!</button>

// Binding JSON
$scope.users = [
		  { name : 'Thor Odinson'},
		  { name : 'Tony Stark'},
		  { name : 'Bruce Banner'},
		  { name : 'Steve Rogers'},
		  { name : 'Clinton Barton'}		  
	  ];

<ul>
	<li ng-repeat="user in users">
		{{user.name}}
	</li>			
</ul>

// http
$http.get('/examples/basicController/users.json')
        .success(function(json) {
           $scope.users = json;
        });
		
// more details for users
<br/>
Age: {{user.age}}
<br>
<b>Friends</b>
<ul>
	<li ng-repeat="f in user.friends">
		{{f.name}}
	</li>
</ul>

Scopes
----------
{{name}}

$scope.nameObj = { name : 'top' };

$scope.nameObj.name = 'bottom';

{{nameObj.name}}
{{nameObj.name}}

Scope on ng-repeat
-----------------
{{counter}}

Scopes 3 - watchers
-------------------

$scope.changes = [];

$scope.$watch('counter', function(newValue, oldValue) {
$scope.changes.push({newValue: newValue, oldValue: oldValue});
});


<div ng-repeat="v in changes">
	{{v.oldValue}} to {{v.newValue}}
</div>


// part 2 -  watcher count
$scope.changes = [];
// I want to do something every time the counter changes...
$scope.$watch('counter', function(newValue, oldValue) {
$scope.changes.push({ 
  newValue: newValue, 
  oldValue: oldValue, 
  watcherCount: totalWatchersOnPage() 
});
});


function totalWatchersOnPage() {
  var root = angular.element(document.getElementsByTagName('body'));

    var watchers = [];

    var f = function (element) {
        angular.forEach(['$scope', '$isolateScope'], function (scopeProperty) { 
            if (element.data() && element.data().hasOwnProperty(scopeProperty)) {
                angular.forEach(element.data()[scopeProperty].$$watchers, function (watcher) {
                    watchers.push(watcher);
                });
            }
        });

        angular.forEach(element.children(), function (childElement) {
            f(angular.element(childElement));
        });
    };

    f(root);

    // Remove duplicate watchers
    var watchersWithoutDuplicates = [];
    angular.forEach(watchers, function(item) {
        if(watchersWithoutDuplicates.indexOf(item) < 0) {
             watchersWithoutDuplicates.push(item);
        }
    });
    return watchersWithoutDuplicates.length;
}


<div ng-repeat="v in changes">
	{{v.oldValue}} to {{v.newValue}} and total watchers {{v.watcherCount}}
</div>

Scopes - Apply/Digest
---------------------
$scope.$apply();

if(!$scope.$root.$$phase) {
	$scope.$apply();
}

$interval(function() {
	$scope.counter = $scope.counter + 1;
	console.log("Counter: " + $scope.counter);
},1000);

Filters
-----------

| orderby: 'name'

| limitTo: 3
 
| uppercase

app.filter('voweless', function() {
	  return function(input) {
	    return input.replace(/[aeiouAEIOU]/g, '');
	  };
	});

| voweless

Links
------


